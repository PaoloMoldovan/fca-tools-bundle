<?php

namespace AppBundle\Document;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Collection;
use Doctrine\ODM\MongoDB\Mapping\Annotations as MongoDB;

/**
 * @MongoDB\EmbeddedDocument
 */
class ContextConceptLatticeConcept
{

    /**
     * @MongoDB\EmbedMany(targetDocument="ContextConceptLatticeConceptObjectId")
     */
    protected $objects;

    /**
     * @MongoDB\EmbedMany(targetDocument="ContextConceptLatticeConceptAttributeId")
     */
    protected $attributes;

    /**
     * @MongoDB\Field(type="int")
     */
    protected $level;
    
    public function __construct()
    {
        $this->objects = new ArrayCollection();
        $this->attributes = new ArrayCollection();
    }
    
    /**
     * Add object
     *
     * @param ContextConceptLatticeConceptObjectId $object
     */
    public function addObject(ContextConceptLatticeConceptObjectId $object)
    {
        $this->objects[] = $object;
    }

    /**
     * Remove object
     *
     * @param ContextConceptLatticeConceptObjectId $object
     */
    public function removeObject(ContextConceptLatticeConceptObjectId $object)
    {
        $this->objects->removeElement($object);
    }

    /**
     * Get objects
     *
     * @return Collection $objects
     */
    public function getObjects()
    {
        return $this->objects;
    }

    /**
     * Add attribute
     *
     * @param ContextConceptLatticeConceptAttributeId $attribute
     */
    public function addAttribute(ContextConceptLatticeConceptAttributeId $attribute)
    {
        $this->attributes[] = $attribute;
    }

    /**
     * Remove attribute
     *
     * @param ContextConceptLatticeConceptAttributeId $attribute
     */
    public function removeAttribute(ContextConceptLatticeConceptAttributeId $attribute)
    {
        $this->attributes->removeElement($attribute);
    }

    /**
     * Get attributes
     *
     * @return Collection $attributes
     */
    public function getAttributes()
    {
        return $this->attributes;
    }

    /**
     * Set level
     *
     * @param int $level
     * @return self
     */
    public function setLevel($level)
    {
        $this->level = $level;
        return $this;
    }

    /**
     * Get level
     *
     * @return int $level
     */
    public function getLevel()
    {
        return $this->level;
    }
}
