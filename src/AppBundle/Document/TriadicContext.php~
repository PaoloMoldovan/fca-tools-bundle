<?php

namespace AppBundle\Document;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Collection;
use Doctrine\ODM\MongoDB\Mapping\Annotations as MongoDB;
use Symfony\Component\HttpFoundation\File\File;
use Vich\UploaderBundle\Mapping\Annotation as Vich;

/**
 * @MongoDB\Document
 * @Vich\Uploadable
 */
class TriadicContext
{

    /**
     * @MongoDB\Id
     */
    protected $id;

    /**
     * @MongoDB\Field(type="string")
     */
    protected $name;

    /**
     * @MongoDB\Field(type="bool")
     */
    protected $isPublic;

    /**
     * @MongoDB\Field(type="string")
     */
    protected $contextFileName;

    /**
     * @var File
     *
     * @Vich\UploadableField(mapping="tri_context_file", fileNameProperty="contextFileName")
     */
    protected $contextFile;

    /**
     * @MongoDB\Collection
     */
    protected $objects;

    /**
     * @MongoDB\Collection
     */
    protected $attributes;

    /**
     * @MongoDB\Collection
     */
    protected $conditions;

    /**
     * @MongoDB\EmbedMany(targetDocument="TriadicRelation")
     */
    protected $relations;

    /**
     * @MongoDB\EmbedMany(targetDocument="TriadicConcept")
     */
    protected $concepts;

    /**
     * @MongoDB\ReferenceOne(targetDocument="User", inversedBy="triadicContexts")
     */
    protected $user;

    /**
     * @var string
     */
    protected $baseFilePath = "web/uploads/tri-context/files/";

    public function __construct()
    {
        $this->objects = array();
        $this->attributes = array();
        $this->conditions = array();
        $this->relations = new ArrayCollection();
        $this->concepts = new ArrayCollection();
    }

    /**
     * Get id
     *
     * @return string $id
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     * @return self
     */
    public function setName($name)
    {
        $this->name = $name;
        return $this;
    }

    /**
     * Get name
     *
     * @return string $name
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set contextFileName
     *
     * @param string $contextFileName
     * @return self
     */
    public function setContextFileName($contextFileName)
    {
        $this->contextFileName = $contextFileName;
        return $this;
    }

    /**
     * Get contextFileName
     *
     * @return string $contextFileName
     */
    public function getContextFileName()
    {
        return $this->contextFileName;
    }

    /**
     * @return string
     */
    public function getBaseFilePath()
    {
        return $this->baseFilePath;
    }

    /**
     * @param string $baseFilePath
     */
    public function setBaseFilePath($baseFilePath)
    {
        $this->baseFilePath = $baseFilePath;
    }

    /**
     * Get context file path
     *
     * @return string
     */
    public function getContextFilePath()
    {
        return $this->baseFilePath . $this->contextFileName;
    }

    /**
     * @param File|\Symfony\Component\HttpFoundation\File\UploadedFile $contextFile
     *
     * @return self
     */
    public function setContextFile(File $contextFile = null)
    {
        $this->contextFile = $contextFile;

        return $this;
    }

    /**
     * @return File
     */
    public function getContextFile()
    {
        return $this->contextFile;
    }

    /**
     * Set user
     *
     * @param User $user
     * @return self
     */
    public function setUser(User $user)
    {
        $this->user = $user;
        return $this;
    }

    /**
     * Get user
     *
     * @return User $user
     */
    public function getUser()
    {
        return $this->user;
    }

    /**
     * Set isPublic
     *
     * @param bool $isPublic
     * @return self
     */
    public function setIsPublic($isPublic)
    {
        $this->isPublic = $isPublic;
        return $this;
    }

    /**
     * Get isPublic
     *
     * @return bool $isPublic
     */
    public function getIsPublic()
    {
        return $this->isPublic;
    }

    /**
     * Add object
     *
     * @param string $object
     */
    public function addObject($object)
    {
        $this->objects[] = $object;
    }

    /**
     * Set objects
     *
     * @param array $objects
     * @return self
     */
    public function setObjects($objects)
    {
        $this->objects = $objects;
        return $this;
    }

    /**
     * Get objects
     *
     * @return array $objects
     */
    public function getObjects()
    {
        return $this->objects;
    }

    /**
     * Add attribute
     *
     * @param string $attribute
     */
    public function addAttribute($attribute)
    {
        $this->attributes[] = $attribute;
    }

    /**
     * Set attributes
     *
     * @param array $attributes
     * @return self
     */
    public function setAttributes($attributes)
    {
        $this->attributes = $attributes;
        return $this;
    }

    /**
     * Get attributes
     *
     * @return array $attributes
     */
    public function getAttributes()
    {
        return $this->attributes;
    }

    /**
     * Add condition
     *
     * @param string $condition
     */
    public function addCondition($condition)
    {
        $this->conditions[] = $condition;
    }

    /**
     * Set conditions
     *
     * @param array $conditions
     * @return self
     */
    public function setConditions($conditions)
    {
        $this->conditions = $conditions;
        return $this;
    }

    /**
     * Add relation
     *
     * @param TriadicRelation $relation
     */
    public function addRelation(TriadicRelation $relation)
    {
        $this->relations[] = $relation;
    }

    /**
     * Remove relation
     *
     * @param TriadicRelation $relation
     */
    public function removeRelation(TriadicRelation $relation)
    {
        $this->relations->removeElement($relation);
    }

    /**
     * Get relations
     *
     * @return \Doctrine\Common\Collections\Collection $relations
     */
    public function getRelations()
    {
        return $this->relations;
    }

    /**
     * Add concept
     *
     * @param TriadicConcept $concept
     */
    public function addConcept(TriadicConcept $concept)
    {
        $this->concepts[] = $concept;
    }

    /**
     * Remove concept
     *
     * @param TriadicConcept $concept
     */
    public function removeConcept(TriadicConcept $concept)
    {
        $this->concepts->removeElement($concept);
    }

    /**
     * Get concepts
     *
     * @return \Doctrine\Common\Collections\Collection $concepts
     */
    public function getConcepts()
    {
        return $this->concepts;
    }

    /**
     * Get array
     *
     * @return array $conditions
     */
    public function getConditions()
    {
        return $this->conditions;
    }
}
