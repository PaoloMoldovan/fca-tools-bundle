<?php

namespace AppBundle\Repository;

use AppBundle\Document\Context;
use AppBundle\Document\User;
use AppBundle\Helper\CommonUtils;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Collection;
use Doctrine\ODM\MongoDB\DocumentRepository;

/**
 * ContextRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ContextRepository extends DocumentRepository
{
    /**
     * @param $user User
     * @return Collection
     */
    public function getAllViewableByUser($user)
    {
        $userContexts = $user->getContexts();
        $publicContexts = $this->findBy(array(
            'isPublic' => true
        ));

        $privateContexts = $this->findBy(array(
            'isPublic' => false
        ));

        $groups = $user->getGroups();
        $groupIds = CommonUtils::filterIds($groups);
        $groupRelatedContexts = array();
        /** @var Context $privateContext */
        foreach ($privateContexts as $privateContext) {
            $privateContextGroupIds = CommonUtils::filterIds($privateContext->getGroups());
            if (count(array_intersect($privateContextGroupIds, $groupIds)) > 0) {
                $groupRelatedContexts[] = $privateContext;
            }
        }

        return new ArrayCollection(array_unique(array_merge(
            $userContexts->toArray(),
            $groupRelatedContexts,
            $publicContexts
        )));
    }
}